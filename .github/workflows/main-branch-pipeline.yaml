name: Main branch workflow

on:
  push:
    branches:
      - main

jobs:
  promote-image:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Read VERSION file
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PUSH_TOKEN }}

      - name: Pull staging image
        run: docker pull "${{ secrets.DOCKERHUB_USERNAME }}/wini-gasthaus-website:${{ env.VERSION }}-stage"

      - name: Tag image for production
        run: |
          docker tag \
            "${{ secrets.DOCKERHUB_USERNAME }}/wini-gasthaus-website:${{ env.VERSION }}-stage" \
            "${{ secrets.DOCKERHUB_USERNAME }}/wini-gasthaus-website:${{ env.VERSION }}"

      - name: Push production image to Docker Hub
        run: docker push "${{ secrets.DOCKERHUB_USERNAME }}/wini-gasthaus-website:${{ env.VERSION }}"

      - name: Delete staging image from Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_DELETE_TOKEN }}
        run: |
          image_name="$DOCKER_HUB_USERNAME/wini-gasthaus-website"
          version="${{ env.VERSION }}"
          staging_tag="$version-stage"
          
          hub_token=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"$DOCKER_HUB_USERNAME\", \"password\": \"$DOCKER_HUB_ACCESS_TOKEN\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          curl -i -X DELETE \
            -H "Accept: application/json" \
            -H "Authorization: JWT $hub_token" \
            https://hub.docker.com/v2/repositories/$image_name/tags/$staging_tag/

  main-branch-deployment:
    runs-on: ubuntu-latest
    needs: promote-image
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Deploy to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG_B64 }}
        with:
          args: |
            helm upgrade --install wini-gasthaus-website chart/ --install -n wini-prod

  create-version-tag:
    runs-on: ubuntu-latest
    needs: main-branch-deployment
    permissions:
      contents: write
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Create version tag
        env:
          GIT_MAIL_ADDRESS: "${{ secrets.GIT_MAIL_ADDRESS }}"
        run: |
          version="v$(cat VERSION)"
          git config --local user.email "$GIT_MAIL_ADDRESS"
          git config --local user.name "Dominik-Hillmann"
          git tag "$version"
          git push --tags
